import pandas as pd

def demographic_data_analyzer(data):
    # 1. How many people of each race are represented in this dataset?
    race_count = data['race'].value_counts()

    # 2. What is the average age of men?
    average_age_men = data[data['sex'] == 'Male']['age'].mean()

    # 3. What is the percentage of people who have a Bachelor's degree?
    percentage_bachelors = (data[data['education'] == 'Bachelors'].shape[0] / data.shape[0]) * 100

    # 4. What percentage of people with advanced education (Bachelors, Masters, or Doctorate) make more than 50K?
    advanced_education = data[data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
    percentage_high_income_advanced = (advanced_education[advanced_education['salary'] == '>50K'].shape[0] / advanced_education.shape[0]) * 100

    # 5. What percentage of people without advanced education make more than 50K?
    no_advanced_education = data[~data['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
    percentage_high_income_no_advanced = (no_advanced_education[no_advanced_education['salary'] == '>50K'].shape[0] / no_advanced_education.shape[0]) * 100

    # 6. What is the minimum number of hours a person works per week?
    min_work_hours = data['hours-per-week'].min()

    # 7. What percentage of the people who work the minimum number of hours per week have a salary of more than 50K?
    min_hour_salary = data[data['hours-per-week'] == min_work_hours]
    percentage_high_income_min_hours = (min_hour_salary[min_hour_salary['salary'] == '>50K'].shape[0] / min_hour_salary.shape[0]) * 100

    # 8. What country has the highest percentage of people that earn >50K and what is that percentage?
    country_salary = data.groupby('native-country').apply(lambda x: (x[x['salary'] == '>50K'].shape[0] / x.shape[0]) * 100)
    highest_country_percentage = country_salary.idxmax(), country_salary.max()

    # 9. Identify the most popular occupation for those who earn >50K in India.
    india_high_income = data[(data['native-country'] == 'India') & (data['salary'] == '>50K')]
    most_popular_occupation_india = india_high_income['occupation'].mode()[0]

    # Return all the results as a dictionary
    return {
        'race_count': race_count,
        'average_age_men': average_age_men,
        'percentage_bachelors': percentage_bachelors,
        'percentage_high_income_advanced': percentage_high_income_advanced,
        'percentage_high_income_no_advanced': percentage_high_income_no_advanced,
        'min_work_hours': min_work_hours,
        'percentage_high_income_min_hours': percentage_high_income_min_hours,
        'highest_country_percentage': highest_country_percentage,
        'most_popular_occupation_india': most_popular_occupation_india
    }

# Example usage:
# Assuming you have the dataset in a CSV file named 'census_data.csv'
# data = pd.read_csv('census_data.csv')
# results = demographic_data_analyzer(data)
# print(results)
