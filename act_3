import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

def medical_data_visualizer():
    # Step 1: Import the data
    df = pd.read_csv('medical_examination.csv')

    # Step 2: Add an overweight column
    # BMI = weight (kg) / height (m)^2
    df['bmi'] = df['weight'] / (df['height'] / 100) ** 2
    df['overweight'] = df['bmi'].apply(lambda x: 1 if x > 25 else 0)

    # Step 3: Normalize cholesterol and gluc columns
    df['cholesterol'] = df['cholesterol'].apply(lambda x: 0 if x == 1 else 1)
    df['gluc'] = df['gluc'].apply(lambda x: 0 if x == 1 else 1)

    # Step 4: Create the DataFrame for categorical plot
    df_cat = pd.melt(df, id_vars=["cardio"], value_vars=["cholesterol", "gluc", "smoke", "alco", "active", "overweight"])
    
    # Step 5: Group and reformat the data for the catplot
    df_cat = df_cat.groupby(['cardio', 'variable', 'value']).size().reset_index(name='count')
    df_cat.rename(columns={'variable': 'feature'}, inplace=True)

    # Step 6: Create the categorical plot
    fig = sns.catplot(x="feature", hue="value", col="cardio", data=df_cat, kind="count")
    fig.set_axis_labels("Feature", "Count")
    plt.subplots_adjust(top=0.85)
    fig.fig.suptitle('Count of Features by Cardio Outcome')

    # Step 7: Draw the heat map
    # Step 7.1: Clean the data
    df_heat = df[(df['ap_lo'] <= df['ap_hi']) & 
                 (df['height'] >= df['height'].quantile(0.025)) & 
                 (df['height'] <= df['height'].quantile(0.975)) & 
                 (df['weight'] >= df['weight'].quantile(0.025)) & 
                 (df['weight'] <= df['weight'].quantile(0.975))]
    
    # Step 7.2: Calculate the correlation matrix
    corr = df_heat.corr()

    # Step 7.3: Generate the mask for the upper triangle
    mask = np.triu(np.ones_like(corr, dtype=bool))

    # Step 7.4: Set up the matplotlib figure
    plt.figure(figsize=(10, 8))

    # Step 7.5: Draw the heat map
    sns.heatmap(corr, annot=True, fmt='.1f', cmap='coolwarm', mask=mask, vmin=-1, vmax=1)

    # Show the plots
    plt.show()

# If you want to test the code
# medical_data_visualizer()
